# Common SWIG build rules
# Author: Karl Wette, 2011--2014

BUILT_SOURCES =
DEFAULT_INCLUDES =
EXTRA_DIST =
EXTRA_HEADERS =
pkginclude_HEADERS =

include $(top_srcdir)/gnuscripts/lalsuite_header_links.am
include $(top_srcdir)/gnuscripts/lalsuite_test.am

.PHONY: force-swig-rule-execution
.PHONY: swig-clean-local
.PHONY: swig-distclean-local
.PHONY: swig-dummy-depfiles
.PHONY: swig-octave-all-local
.PHONY: swig-octave-clean-local
.PHONY: swig-octave-install-hook
.PHONY: swig-octave-uninstall-hook
.PHONY: run-octave
.PHONY: debug-octave-test
.PHONY: swig-python-all-local
.PHONY: swig-python-clean-local
.PHONY: swig-python-install-hook
.PHONY: swig-python-uninstall-hook
.PHONY: run-python
.PHONY: debug-python-test

header-links: header-links-local

EXTRA_DIST += \
	generate_swig_iface.py \
	$(END_OF_LIST)

pkginclude_HEADERS += \
	SWIG$(PACKAGE_NAME)Alpha.i \
	SWIG$(PACKAGE_NAME)Omega.i \
	SWIG$(PACKAGE_NAME)Test.h \
	$(END_OF_LIST)

swig_depfiles =
swig-dummy-depfiles: $(swig_depfiles)
if AMDEP
$(swig_depfiles):
	@$(MKDIR_P) $(SWIG_DEPDIR) && echo '# generated by swig-dummy-depfiles' > $@.tmp && mv -f $@.tmp $@
endif

distclean-local: swig-distclean-local
swig-distclean-local:
	-rm -rf $(SWIG_DEPDIR)

if AMDEP
swig_deps_if =
else
swig_deps_if = : swig-deps-false-
endif

DEBUG_TESTS_ENVIRONMENT = \
	$(TESTS_ENVIRONMENT) \
	export NASTY_ERROR_HANDLERS; NASTY_ERROR_HANDLERS=1; \
	$(END_OF_LIST)

if SWIG_BUILD

swig_verbose   = $(swig_verbose_$(SWIGVERBOSE))
swig_verbose_  = $(swig_verbose_0)
swig_verbose_0 =
swig_verbose_1 = -v

swig_iface = swig$(PACKAGE).i
swig_preproc_flags = -Werror -Wextra -w201,302 -I$(top_builddir)/include -includeall -ignoremissing -xml -xmllite -MP -MD -MT $@
swig_flags = $(swig_verbose) -Werror -Wextra -w314,506,511 -I$(top_builddir)/include $(SWIG_CPPFLAGS) $(LAL_SYSTEM_INCLUDES) -MP -MD -MT $@
swig_cppflags = -shared -I. -I$(top_builddir)/include $(SWIG_CPPFLAGS)
swig_ldflags = -module -avoid-version -version-info 0:0:0 $(SWIG_LDFLAGS) $(AM_LDFLAGS)
swig_libtoolflags = --tag=disable-static

swig_ifacedir = $(pkgincludedir)
nodist_swig_iface_HEADERS = $(swig_iface)

swig_config_header = swiglal_config.h
swig_public_config_undef_header = swiglal_$(PACKAGE_NAME)Config_undef.h

BUILT_SOURCES += \
	$(swig_config_header) \
	$(swig_public_config_undef_header) \
	$(END_OF_LIST)

header-links-local:
	$(AM_V_at)rm -f $(top_builddir)/include/lal/$(swig_iface) && \
	$(LN_S) $(abs_builddir)/$(swig_iface) $(top_builddir)/include/lal/$(swig_iface)

$(swig_config_header): Makefile $(CONFIG_HEADER)
	$(AM_V_GEN)for file in $(CONFIG_HEADER); do \
		case "$${file}" in \
			*/config.h) \
				echo "// $@: generated from $${file} by $(subdir)/Makefile" >$@; \
				$(SED) -n -e 's/^#define  */#define SWIGLAL_/p' "$${file}" >>$@;; \
			*) ;; \
		esac; \
	done

$(swig_public_config_undef_header): Makefile $(CONFIG_HEADER)
	$(AM_V_GEN)for file in $(CONFIG_HEADER); do \
		case "$${file}" in \
			*/config.h) ;; \
			*) \
				echo "// $@: generated from $${file} by $(subdir)/Makefile" >$@; \
				$(SED) -n -e 's|^ *[/][*] *#undef *\([^ ]*\) *[*][/] *$$|#define \1 0|p' "$${file}" >> $@;; \
		esac; \
	done

swiglal_header_list.txt: force-swig-rule-execution
	$(AM_V_at)headers=`find $(top_builddir)/include/lal -name '*.h' ! -name '*VCSInfoHeader.h'`; \
	headers=`printf '%s\n' $${headers} | $(SED) -e 's|^.*/\([^/]*\)$$|\1|' | LC_ALL=C sort`; \
	printf "%s\n" $${headers} >>$@.tmp; \
	if test -f $@ && diff -s $@ $@.tmp >/dev/null 2>&1; then \
		rm -f $@.tmp; \
	else \
		mv -f $@.tmp $@; \
	fi

if AMDEP
@swig__depfile_include_pre@$(SWIG_DEPDIR)/swiglal.deps@swig__depfile_include_post@
swig_depfiles += $(SWIG_DEPDIR)/swiglal.deps
swig_preproc_flags += -MF $(SWIG_DEPDIR)/swiglal.deps.tmp
endif

$(swig_iface): Makefile swiglal_header_list.txt $(swig_public_config_undef_header) $(srcdir)/generate_swig_iface.py
	$(AM_V_GEN)echo '// $@_preproc.i: generated by $(subdir)/Makefile' >$@_preproc.i; \
	echo "%module swiglal_preproc;" >>$@_preproc.i; \
	echo "%warnfilter(SWIGWARN_PARSE_REDUNDANT) __swiglal__;" >>$@_preproc.i; \
	echo "%warnfilter(SWIGWARN_PARSE_REDUNDANT) __swiglal_clear__;" >>$@_preproc.i; \
	echo "#define SWIGLAL(...) const char __swiglal__[] = #__VA_ARGS__" >>$@_preproc.i; \
	echo "#define SWIGLAL_CLEAR(...) const char __swiglal_clear__[] = #__VA_ARGS__" >>$@_preproc.i; \
	stddeffile=""; \
	for flag in $(swig_flags); do \
		case "$${flag}" in \
			-I*) \
				dir=`echo $${flag} | $(SED) -e 's|^-I||'`; \
				stddeffile="$${dir}/lal/LALStddef.h"; \
				if test -f "$${stddeffile}"; then \
					break; \
				fi; \
				stddeffile=""; \
				;; \
		esac; \
	done; \
	if test "x$${stddeffile}" = x; then \
		echo "ERROR: could not find LAL standard definitions header" >&2; \
		exit 1; \
	fi; \
	echo "%import \"$${stddeffile}\"" >>$@_preproc.i; \
	printf "%%include <lal/%s>\n" `cat swiglal_header_list.txt` >>$@_preproc.i; \
	echo "%include \"$(swig_public_config_undef_header)\"" >>$@_preproc.i; \
	if $(SWIG) $(swig_preproc_flags) -o $@_preproc.xml $@_preproc.i; then \
		$(swig_deps_if)mv -f $(SWIG_DEPDIR)/swiglal.deps.tmp $(SWIG_DEPDIR)/swiglal.deps; \
	else \
		$(swig_deps_if)rm -f $(SWIG_DEPDIR)/swiglal.deps.tmp; \
		rm -f $@; \
		exit 1; \
	fi; \
	if $(PYTHON) $(srcdir)/generate_swig_iface.py '$(PACKAGE_NAME)' '$(SWIG_DEPENDENCIES)' '$(swig_function_prefixes)' $@_preproc.xml $@; then \
		: ; \
	else \
		rm -f $@; \
		exit 1; \
	fi

clean-local: swig-clean-local
swig-clean-local:
	-rm -rf swiglal*

endif # SWIG_BUILD

if SWIG_BUILD_OCTAVE

swig_octave_flags = -octave $(SWIG_OCTAVE_FLAGS) -outdir swiglal_octave/ $(swig_flags)

octexec_LTLIBRARIES = swiglal_octave.la
nodist_swiglal_octave_la_SOURCES = swiglal_@PACKAGE@_octave.cpp
swiglal_octave_la_SOURCES = SWIGTest.c
swiglal_octave_la_CPPFLAGS = $(SWIG_OCTAVE_CPPFLAGS_IOCTAVE) $(swig_cppflags) $(SWIG_OCTAVE_CPPFLAGS) $(LAL_SYSTEM_INCLUDES)
swiglal_octave_la_CXXFLAGS = $(SWIG_OCTAVE_CXXFLAGS)
swiglal_octave_la_LDFLAGS = $(LDADD) $(swig_ldflags) $(SWIG_OCTAVE_LDFLAGS)
swiglal_octave_la_LIBTOOLFLAGS = $(swig_libtoolflags)

if AMDEP
@swig__depfile_include_pre@$(SWIG_DEPDIR)/swiglal_octave.deps@swig__depfile_include_post@
swig_depfiles += $(SWIG_DEPDIR)/swiglal_octave.deps
swig_octave_flags += -MF $(SWIG_DEPDIR)/swiglal_octave.deps.tmp
endif

$(nodist_swiglal_octave_la_SOURCES): $(swig_iface) $(swig_config_header)
	$(AM_V_GEN)$(MKDIR_P) swiglal_octave/ && \
	if $(SWIG) $(swig_octave_flags) -o $@ $<; then \
		$(swig_deps_if)mv -f $(SWIG_DEPDIR)/swiglal_octave.deps.tmp $(SWIG_DEPDIR)/swiglal_octave.deps; \
	else \
		$(swig_deps_if)rm -f $(SWIG_DEPDIR)/swiglal_octave.deps.tmp; \
		exit 1; \
	fi

all-local: swig-octave-all-local
swig-octave-all-local: $(octexec_LTLIBRARIES)
	$(AM_V_at)$(MKDIR_P) $(top_builddir)/octave && \
	cd $(top_builddir)/octave && \
	rm -f $(PACKAGE).oct && \
	$(LN_S) $(abs_top_builddir)/swig/$(SWIG_LTLIBDIR)/swiglal_octave$(SWIG_SOEXT) $(PACKAGE).oct

clean-local: swig-octave-clean-local
swig-octave-clean-local:
	-cd $(top_builddir)/octave && \
	rm -f $(PACKAGE).oct

install-exec-hook: swig-octave-install-hook
swig-octave-install-hook:
	cd $(DESTDIR)$(octexecdir) && \
	rm -f swiglal_octave.la $(PACKAGE).oct* && \
	mv -f swiglal_octave$(SWIG_SOEXT) $(PACKAGE).oct

uninstall-hook: swig-octave-uninstall-hook
swig-octave-uninstall-hook:
	cd $(DESTDIR)$(octexecdir) && \
	rm -f $(PACKAGE).oct

test_scripts += SWIGTest$(PACKAGE_NAME)Octave.m

run-octave: swig-octave-all-local
	$(AM_V_at)$(TESTS_ENVIRONMENT)$(test_script_compiler) $(OCTAVE)

debug-octave-test: swig-octave-all-local
	$(AM_V_at)$(DEBUG_TESTS_ENVIRONMENT)$(test_script_compiler) $${DEBUGGER:-gdb --args} $(OCTAVE) $${SCRIPT-./SWIGTest$(PACKAGE_NAME)Octave.m}

endif # SWIG_BUILD_OCTAVE

if SWIG_BUILD_PYTHON

swig_python_flags = -python $(SWIG_PYTHON_FLAGS) -outdir swiglal_python/ $(swig_flags)

pkgpyexec_LTLIBRARIES = swiglal_python.la
nodist_pkgpyexec_PYTHON = swiglal_python/$(PACKAGE).py
nodist_swiglal_python_la_SOURCES = swiglal_@PACKAGE@_python.c
swiglal_python_la_SOURCES = SWIGTest.c
swiglal_python_la_CPPFLAGS = $(swig_cppflags) $(SWIG_PYTHON_CPPFLAGS) $(LAL_SYSTEM_INCLUDES)
swiglal_python_la_CFLAGS = $(SWIG_PYTHON_CFLAGS)
swiglal_python_la_LDFLAGS = $(LDADD) $(swig_ldflags) $(SWIG_PYTHON_LDFLAGS) $(EXTRA_SWIG_PYTHON_LDFLAGS)
swiglal_python_la_LIBTOOLFLAGS = $(swig_libtoolflags)

if AMDEP
@swig__depfile_include_pre@$(SWIG_DEPDIR)/swiglal_python.deps@swig__depfile_include_post@
swig_depfiles += $(SWIG_DEPDIR)/swiglal_python.deps
swig_python_flags += -MF $(SWIG_DEPDIR)/swiglal_python.deps.tmp
endif

$(nodist_swiglal_python_la_SOURCES): $(swig_iface) $(swig_config_header)
	$(AM_V_GEN)$(MKDIR_P) swiglal_python/ && \
	if $(SWIG) $(swig_python_flags) -o $@ $<; then \
		$(swig_deps_if)mv -f $(SWIG_DEPDIR)/swiglal_python.deps.tmp $(SWIG_DEPDIR)/swiglal_python.deps; \
	else \
		$(swig_deps_if)rm -f $(SWIG_DEPDIR)/swiglal_python.deps.tmp; \
		exit 1; \
	fi

$(nodist_pkgpyexec_PYTHON): $(nodist_swiglal_python_la_SOURCES)

all-local: swig-python-all-local
swig-python-all-local: $(pkgpyexec_LTLIBRARIES)
	$(AM_V_at)$(MKDIR_P) $(top_builddir)/python/$(PACKAGE) && \
	cd $(top_builddir)/python/$(PACKAGE) && \
	rm -f _$(PACKAGE)$(SWIG_SOEXT) $(PACKAGE).py && \
	$(LN_S) $(abs_top_builddir)/swig/$(SWIG_LTLIBDIR)/swiglal_python$(SWIG_SOEXT) _$(PACKAGE)$(SWIG_SOEXT) && \
	if test -r $(abs_top_srcdir)/swig/$(nodist_pkgpyexec_PYTHON); then \
		$(LN_S) $(abs_top_srcdir)/swig/$(nodist_pkgpyexec_PYTHON) $(PACKAGE).py; \
	else \
		$(LN_S) $(abs_top_builddir)/swig/$(nodist_pkgpyexec_PYTHON) $(PACKAGE).py; \
	fi

clean-local: swig-python-clean-local
swig-python-clean-local:
	-cd $(top_builddir)/python/$(PACKAGE) && \
	rm -f _$(PACKAGE)$(SWIG_SOEXT) $(PACKAGE).py $(PACKAGE).pyc $(PACKAGE).pyo

install-exec-hook: swig-python-install-hook
swig-python-install-hook:
	cd $(DESTDIR)$(pkgpyexecdir) && \
	rm -f swiglal_python.la _$(PACKAGE)$(SWIG_SOEXT)* && \
	mv -f swiglal_python$(SWIG_SOEXT) _$(PACKAGE)$(SWIG_SOEXT)

uninstall-hook: swig-python-uninstall-hook
swig-python-uninstall-hook:
	cd $(DESTDIR)$(pkgpyexecdir) && \
	rm -f _$(PACKAGE)$(SWIG_SOEXT)

test_scripts += SWIGTest$(PACKAGE_NAME)Python.py

run-python: swig-python-all-local
	$(AM_V_at)$(TESTS_ENVIRONMENT)$(test_script_compiler) $(PYTHON)

debug-python-test: swig-python-all-local
	$(AM_V_at)$(DEBUG_TESTS_ENVIRONMENT)$(test_script_compiler) $${DEBUGGER:-gdb --args} $(PYTHON) $${SCRIPT-./SWIGTest$(PACKAGE_NAME)Python.py}

endif # SWIG_BUILD_PYTHON

tags-am:
	@echo > swiglal_dummy.c && $(ETAGS) swiglal_dummy.c && rm -f swiglal_dummy.c
ctags-am:
	@echo > swiglal_dummy.c && $(CTAGS) swiglal_dummy.c && rm -f swiglal_dummy.c
cscopelist-am:
	@:
