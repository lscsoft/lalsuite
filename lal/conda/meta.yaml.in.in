# This is a copy of the upstream conda recipe for this package
# hosted at github.com/conda-forge/lal-feedstock and licensed
# under the terms of the BSD 3-Clause license.
# This is only for CI purposes, and should not be considered
# production-ready at any time.

{% set name = "lal" %}

# default FFT implementation to FFTW
{% if fft_impl is not defined %}
{% set fft_impl = "fftw" %}
{% endif %}

# set version based on nightly
# (we rebuild the nightly version ourselves because the tarball might have
#  been generated on a different day)
{% set base_version = "@BASE_VERSION@" %}
{% set nightly_version = "@NIGHTLY_VERSION@" %}
{% if nightly_version %}
{% set version = base_version + "-dev" + datetime.datetime.utcnow().strftime("%Y%m%d") %}
{% else %}
{% set version = base_version %}
{% endif %}

# dependency versions
{% set swig_version = "@MIN_SWIG_VERSION@" %}

# avoid circular imports that would break migrations
{% set migrating = False %}
{% set migrating = True %}  # [python_impl!='cpython' or py>=313]

package:
  name: {{ name }}-split
  version: {{ version|replace('-', '.') }}

source:
  url: file://@TARBALL@
  sha256: @SHA256@

build:
  error_overlinking: true
  number: 9999
  script_env:
    - CI_COMMIT_TAG
    - CI_PIPELINE_SOURCE
    - ENABLE_NIGHTLY=@NIGHTLY_VERSION@
    - GITLAB_CI
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - pkg-config >=0.18.0
    - make
    - bc
    - swig >={{ swig_version }}
  host:
    - fftw * nompi*  # [fft_impl == "fftw"]
    - gsl
    - hdf5
    - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
    - zlib

outputs:
  - name: liblal
    script: install-lib.sh
    build:
      error_overlinking: true
      run_exports:
        - {{ pin_subpackage("liblal", max_pin="x") }}
      string: {{ fft_impl }}_h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - make  # [not win]
        - swig >={{ swig_version }}
      host:
        - fftw * nompi*  # [fft_impl == "fftw"]
        - gsl
        - hdf5
        - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
        - zlib
      run_constrained:
        # make sure downstream packages are updated beyond the first
        # appearance of liblal
        - lal >=7.1.1
        - python-lal >=7.1.1
    test:
      requires:
        - pkg-config
      commands:
        # check library
        - test -f ${PREFIX}/lib/liblal${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/liblalsupport${SHLIB_EXT}  # [unix]
        # check pkg-config
        - pkg-config --print-errors --exact-version "${PKG_VERSION}" lal
        - pkg-config --print-errors --exact-version "${PKG_VERSION}" lalsupport
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite.git
      license: GPL-2.0-or-later
      license_file: COPYING
      summary: LVK Algorithm Library shared object libraries
      description: |
        The LVK Algorithm Library for gravitational wave data analysis.
        This package contains the shared object libraries need to build
        applications that use LAL.

  - name: python-lal
    script: build-python.sh
    build:
      error_overlinking: true
      force_use_keys:
        # force this package to use the same keys as liblal so that
        # we ensure a unique python-lal build string for each unique
        # liblal build
        - fftw  # [fft_impl == "fftw"]
        - gsl
        - hdf5
        - mkl  # [fft_impl == "mkl"]
        - zlib
      ignore_run_exports:
        # needed by ./configure but not linked by python-lal
        - libzlib
        # things we declare to help the solver, but don't actually need
        - mkl  # [fft_impl == "mkl"]
      script_env:
        - CI_COMMIT_TAG
        - CI_PIPELINE_SOURCE
        - ENABLE_NIGHTLY=@NIGHTLY_VERSION@
        - GITLAB_CI
      string: {{ fft_impl }}_py{{ py }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - help2man >=1.37
        - make  # [unix]
        - pkg-config >=0.18.0
        - swig >={{ swig_version }}
        # extras for cross-compilation:
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - numpy                               # [build_platform != target_platform]
        - python                              # [build_platform != target_platform]
      host:
        - {{ pin_subpackage('liblal', exact=True) }}
        - numpy
        - pytest  # [build_platform == target_platform]
        - python
        - zlib
        # provided to assist the solver, but not actually used
        - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
      run:
        - igwn-segments
        - {{ pin_subpackage('liblal', exact=True) }}
        - numpy
        - python
        - python-dateutil
        - scipy
    test:
      requires:
        - freezegun
        - igwn-ligolw  # [not migrating]
        - lscsoft-glue
        - pytest >=4.0.0a0
      source_files:
        - test/python
      commands:
        - python -m pytest -ra -v --junit-xml=${CI_PROJECT_DIR:-.}/junit-python${PY_VER}.xml test/python {% if migrating -%} --ignore test/python/test_rate.py -k 'not lal.rate and not lal.series' {%- endif %}
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite.git
      license: GPL-2.0-or-later
      license_file: COPYING
      summary: LVK Algorithm Library Python bindings
      description: |
        The LVK Algorithm Library for gravitational wave data analysis.
        This package contains the Python bindings.

  - name: lal
    script: install-bin.sh
    build:
      error_overlinking: true
      force_use_keys:
        # force this package to use the same keys as liblal so that
        # we ensure a unique lal build string for each unique liblal build
        - fftw  # [fft_impl == "fftw"]
        - gsl
        - hdf5
        - mkl  # [fft_impl == "mkl"]
        - zlib
      ignore_run_exports:
        # things we declare to help the solver, but don't actually need
        - mkl
      string: {{ fft_impl }}_py{{ py }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - help2man >=1.37
        - make  # [unix]
        - sed
      host:
        - fftw  # [fft_impl == "fftw"]
        - igwn-segments
        - {{ pin_subpackage('liblal', exact=True) }}
        - python
        - {{ pin_subpackage('python-lal', exact=True) }}
        - zlib
        # extras to help the solver
        - mkl-devel {{ mkl }}  # [fft_impl == "mkl"]
      run:
        - fftw  # [fft_impl == "fftw"]
        - igwn-ligolw  # [not migrating]
        - {{ pin_subpackage('liblal', exact=True) }}
        - igwn-segments
        - numpy
        - python
        - {{ pin_subpackage('python-lal', exact=True) }}
    test:
      commands:
        - lal_fftw_wisdom --help  # [fft_impl == "fftw"]
        - lal_fftwf_wisdom --help  # [fft_impl == "fftw"]
        - lal_path2cache <<< A-B-0-1.gwf
        - lal_searchsum2cache --help  # [not migrating]
        - lal_simd_detect
        - lal_version --verbose
        - test "$(lal_tconvert --rfc-2822 800000000)" == "Fri, 13 May 2005 06:13:07 +0000"  # [unix]
        - test "$(lal_tconvert Fri, 13 May 2005 06:13:07 +0000)" -eq 800000000  # [unix]
        - test "$(lal_tconvert 1831518865)" == "Tue Jan 19 03:14:07 UTC 2038"
        - test "$(lal_tconvert 1831518866)" == "Tue Jan 19 03:14:08 UTC 2038"
    about:
      home: https://wiki.ligo.org/Computing/LALSuite
      doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
      dev_url: https://git.ligo.org/lscsoft/lalsuite/
      license: GPL-2.0-or-later
      license_file: COPYING
      summary: LVK Algorithm Library runtime tools
      description: |
        The LVK Algorithm Library for gravitational wave data analysis.
        This package contains the runtime tools.

about:
  home: https://wiki.ligo.org/Computing/LALSuite
  doc_url: https://lscsoft.docs.ligo.org/lalsuite/lal/
  dev_url: https://git.ligo.org/lscsoft/lalsuite/
  license: GPL-2.0-or-later
  license_file: COPYING
  summary: LVK Algorithm Library
  description: |
    The LVK Algorithm Library for gravitational wave data analysis.
    This package contains the shared-object libraries needed to run
    applications that use the LAL library.  If you want to install
    the Python bindings, please install the associated python-lal
    package.

extra:
  feedstock-name: lal
  recipe-maintainers:
    - duncanmmacleod
    - skymoo
