#!/usr/bin/env perl
# Author: Karl Wette, 2016

use strict;

my %name2mails;
my %cmail2cname;

open IN, ".mailmap" or die $!;
binmode IN, ":encoding(UTF-8)";
while (<IN>) {
  chomp;

  my ($pname, $pmail, $cname, $cmail) = /^([^<]*?)\s*<([^>]*)>(?:\s*([^<]*?)\s*<([^>]*)>)?$/ or die;

  $cmail = $pmail if $cmail eq "";

  $name2mails{$pname}->{$pmail} = -1;
  $name2mails{$pname}->{$cmail} = 0 if !defined($name2mails{$pname}->{$cmail});
  $cmail2cname{$cmail} = $cname;

}
close IN;

open IN, "git log HEAD | git shortlog --summary --email --numbered |" or die $!;
binmode IN, ":encoding(UTF-8)";
while (<IN>) {
  chomp;

  my ($n, $name, $mail) = m/^\s*(\d+)\s+([^<>]+)\s+<([^>]+)>\s*$/ or die;

  $name2mails{$name}->{$mail} = $n if !defined($name2mails{$name}->{$mail});

}
close IN;

my @mailmap;

foreach my $pname (sort { $a cmp $b } keys(%name2mails)) {

  my $pname2mail = lc($pname);
  $pname2mail =~ s/\s+/./g;

  my @pmails;
  push @pmails, grep { /^${pname2mail}[@]ligo[.]org$/ } keys(%{$name2mails{$pname}});
  push @pmails, grep { /^[a-z.-]+[@]ligo[.]org$/ } keys(%{$name2mails{$pname}});
  push @pmails, grep { /[@]ligo[.]org$/ } keys(%{$name2mails{$pname}});
  push @pmails, grep { $name2mails{$pname}->{$_} < 0 } keys(%{$name2mails{$pname}});
  push @pmails, sort { $name2mails{$pname}->{$b} <=> $name2mails{$pname}->{$a} } keys(%{$name2mails{$pname}});
  shift @pmails if $pmails[0] =~ /^albert[.]einstein@/i;

  my $pmail = shift @pmails;
  die "Could not determine email address for $pname" unless defined($pmail);

  push @mailmap, "$pname <$pmail>";
  foreach my $mail (sort { $a cmp $b } keys(%{$name2mails{$pname}})) {
    next if $mail eq $pmail;
    if ($cmail2cname{$mail} ne "") {
      push @mailmap, "$pname <$pmail> $cmail2cname{$mail} <$mail>";
    } else {
      push @mailmap, "$pname <$pmail> <$mail>";
    }
  }

}

open OUT, ">.mailmap" or die $!;
binmode OUT, ":encoding(UTF-8)";
foreach my $line (@mailmap) {
  print OUT "$line\n";
}
close OUT;
