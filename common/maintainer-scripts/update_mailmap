#!/usr/bin/env perl
# Author: Karl Wette, 2016

# Perform some cleanup operations on the Git `.mailmap` file:
# - sync `.mailmap` with Git log entries;
# - provide unique author/email mappings;
# - prefer `ligo.org` email addresses.

use strict;

my %name2mails;
my %cmail2cname;

open IN, ".mailmap" or die $!;
binmode IN, ":encoding(UTF-8)";
while (<IN>) {
  chomp;

  my ($pname, $pmail, $cname, $cmail) = /^([^<]*?)\s*<([^>]*)>(?:\s*([^<]*?)\s*<([^>]*)>)?$/ or die;

  $cmail = $pmail if $cmail eq "";

  $name2mails{$pname}->{$pmail} = -1;
  $name2mails{$pname}->{$cmail} = 0 if !defined($name2mails{$pname}->{$cmail});
  $cmail2cname{$cmail} = $cname;

}
close IN;

$_ = $ENV{"CI_COMMIT_AUTHOR"};
if (defined($_)) {

  my ($name, $mail) = m/^([^<>]+)\s+<([^>]+)>$/ or die;

  $name2mails{$name}->{$mail} = -1 if !defined($name2mails{$name}->{$mail});

}

open IN, "git log --full-history --no-merges HEAD | git shortlog --summary --email --numbered |" or die $!;
binmode IN, ":encoding(UTF-8)";
while (<IN>) {
  chomp;

  my ($n, $name, $mail) = m/^\s*(\d+)\s+([^<>]+)\s+<([^>]+)>\s*$/ or die;

  $name2mails{$name}->{$mail} = $n if !defined($name2mails{$name}->{$mail});

}
close IN;

my @mailmap;
my %usernames2mails;

foreach my $pname (sort { $a cmp $b } keys(%name2mails)) {

  my $pname2mail = lc($pname);
  $pname2mail =~ s/\s+/./g;

  my @pmails;
  push @pmails, grep { /^${pname2mail}[@]ligo[.]org$/ } keys(%{$name2mails{$pname}});
  push @pmails, grep { /^[a-z.-]+[@]ligo[.]org$/ } keys(%{$name2mails{$pname}});
  push @pmails, grep { /[@]ligo[.]org$/ } keys(%{$name2mails{$pname}});
  push @pmails, grep { $name2mails{$pname}->{$_} < 0 } keys(%{$name2mails{$pname}});
  push @pmails, sort { $name2mails{$pname}->{$b} <=> $name2mails{$pname}->{$a} } keys(%{$name2mails{$pname}});
  shift @pmails if $pmails[0] =~ /^albert[.]einstein@/i;

  my $pmail = shift @pmails;
  die "Could not determine email address for $pname" unless defined($pmail);

  if ($pname =~ /[^[:upper:][:lower:] .'-]/ || $pname =~ /^[[:upper:] .'-]+$/ || $pname =~ /^[[:lower:] .'-]/ || $pname =~ /human name for/i) {
    $usernames2mails{$pname} = $pmail;
    next;
  }

  push @mailmap, "$pname <$pmail>";
  foreach my $mail (sort { $a cmp $b } keys(%{$name2mails{$pname}})) {
    next if $mail eq $pmail;
    if ($cmail2cname{$mail} ne "") {
      push @mailmap, "$pname <$pmail> $cmail2cname{$mail} <$mail>";
    } else {
      push @mailmap, "$pname <$pmail> <$mail>";
    }
  }

}

if (scalar(%usernames2mails) > 0) {
  print STDERR <<EOF;
------------------------------------------------------------------------
It looks like commits were made by the following authors:

EOF
  foreach my $pname (sort { $a cmp $b } keys(%usernames2mails)) {
    print STDERR "$pname <$usernames2mails{$pname}>\n";
  }
  print STDERR <<EOF;

Based on being all lower/upper case, it looks like these authors
used usernames for their commits, rather than human names.

To fix this, please add the following lines to the .mailmap file,
which is located at the top level of the LALSuite Git repo:

EOF
  foreach my $pname (sort { $a cmp $b } keys(%usernames2mails)) {
    print STDERR "(human name for $pname) <$usernames2mails{$pname}>\n";
  }
  print STDERR <<EOF;

replacing usernames with human names as indicated. Accented characters
are fully supported in author names; please use if appropriate. If any
author already has an entry in the .mailmap file (under a different
email address), please check that the author's name is spelled exactly
the same for all email addresses.

Finally, run this command from the top level of the LALSuite Git repo:

\$ make update-authors
------------------------------------------------------------------------
EOF
  exit(1);
}

open OUT, ">.mailmap" or die $!;
binmode OUT, ":encoding(UTF-8)";
foreach my $line (@mailmap) {
  print OUT "$line\n";
}
close OUT;
