# ----------------------------------------------------------------------
# LALSuite: wheels
#
# Build python wheels
# ----------------------------------------------------------------------

# job template for wheel builds
.wheel:
  stage: wheels
  needs: []
  extends:
    - .build-job
  rules:
    - !reference [.ci-wheels, rules]
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-nightly-deploy, rules]
  artifacts:
    expire_in: 18h
    paths:
      - wheelhouse
    when: always

# do some simple sanity checks in a virtualenv
.wheel-test:
  # remove build tree first to make sure wheel does not
  # access it, e.g. try to find LAL data files there
  - rm -rf wheel/build/
  # install wheel
  - !reference [.python-venv]
  - pip install solar_system_ephemerides
  - pip install wheelhouse/*
  # check metadata
  - pip show lalsuite
  # Skip pip check for now. See https://github.com/scipy/scipy/issues/21436
  # - python -m pip check lalsuite
  # test loading Python modules and finding data files
  - |
    env LAL_DEBUG_LEVEL=info python3 - <<EOF
    import lal
    import lalframe
    import lalmetaio
    import lalsimulation
    import lalpulsar
    series = lal.CreateREAL8FrequencySeries('psd', 0, 0, 1, None, 4096)
    lalsimulation.SimNoisePSDaLIGOAPlusDesignSensitivityT1800042(series, 10)
    lalpulsar.InitBarycenter("earth00-40-DE405.dat.gz", "sun00-40-DE405.dat.gz")
    EOF
  # test running Python scripts
  - lal_path2cache --help
  # test running C executables and finding data files
  - lalapps_version
  - env LAL_DEBUG_LEVEL=info lalsim-detector-noise --official --aligo-nsnsopt --duration 1 >/dev/null
  - env LAL_DEBUG_LEVEL=info lalpulsar_PrintDetectorState --detector H1 --Alpha 4.65 --Delta -0.51 --timeGPS 1100000000 >/dev/null

# Build receipe for standalone wheels on Linux
.wheel:manylinux:
  extends:
    - .wheel
  script:
    - export PYTHON="/opt/python/$(echo ${CI_JOB_NAME} | sed 's/.*:\(.*\)-manylinux.*/\1/')/bin/python"
    # Build against numpy>=2.0.0rc1 for ABI compatibility with Numpy 1.x and 2.x.
    # See https://numpy.org/devdocs/dev/depending_on_numpy.html#numpy-2-abi-handling.
    - !reference [.python-venv]
    - pip install
          'numpy>=2.0.0'
          setuptools
          wheel
    - pip list installed
    # Build wheel
    - ./00boot
    - SSE="solar_system_ephemerides/ephemerides"
    - ./configure
          ${ENABLE_NIGHTLY}
          --with-fallback-data-path="../lalapps/data:../${SSE}/earth:../${SSE}/sun:../${SSE}/time"
          --disable-doxygen
          --enable-mpi
          --enable-python
          --enable-swig-python
          --without-ephem
          PYTHON="${VIRTUAL_ENV}/bin/python3"
    - make -j${CPU_COUNT} wheel
    # Bundle and fix up dependent shared libraries
    - auditwheel repair wheel/*.whl
    # Test: do some simple sanity checks in a virtualenv
    - !reference [.wheel-test]

# Build receipe for standalone wheels on macOS
.wheel:macos:
  extends:
    - .wheel
    - .macos-job
  script:
    # this build uses macports for the libraries and Python
    - . /opt/local/share/macports/setupenv.bash
    # find python
    - PYTHON=$(which python$(echo ${CI_JOB_NAME} | sed 's/.*:cp\([0-9]\)\([0-9]\{1,\}\).*/\1.\2/'))
    # Enter virtualenv so that we have a controlled version of Numpy.
    # Build against numpy>=2.0.0rc1 for ABI compatibility with Numpy 1.x and 2.x.
    # See https://numpy.org/devdocs/dev/depending_on_numpy.html#numpy-2-abi-handling.
    - !reference [.python-venv]
    - pip install
          delocate
          'numpy>=2.0.1'
          pip
          setuptools
          wheel
    - pip list installed
    # Build wheel
    - ./00boot
    - SSE="solar_system_ephemerides/ephemerides"
    - ./configure
          ${ENABLE_NIGHTLY}
          --with-fallback-data-path="../../lalapps/data:../../${SSE}/earth:../../${SSE}/sun:../../${SSE}/time"
          --disable-doxygen
          --enable-mpi
          --enable-python
          --enable-swig-python
          --without-ephem
          PYTHON="${VIRTUAL_ENV}/bin/python3"
          LDFLAGS=-Wl,-headerpad_max_install_names
    - make -j${CPU_COUNT} wheel
    # Bundle and fix up dependent shared libraries
    - delocate-wheel -v -w wheelhouse wheel/*.whl
    # Test: do some simple sanity checks in a virtualenv
    - !reference [.wheel-test]

.wheel:macos:x86_64:
  tags:
    - macos_x86_64
  # allow jobs to fail due to current runner instability
  allow_failure: true

.wheel:macos:arm64:
  tags:
    # explicitly use the oldest macOS tag we have
    - macos_monterey_arm64

# wheel build using the manylinux_2_28_x86_64 container
.wheel:manylinux_2_28_x86_64:
  extends:
    - .wheel:manylinux
  image: containers.ligo.org/lscsoft/lalsuite-manylinux/manylinux_2_28_x86_64

# wheel build using the manylinux_2_28_aarch64 container
.wheel:manylinux_2_28_aarch64:
  extends:
    - .wheel:manylinux
  image: containers.ligo.org/lscsoft/lalsuite-manylinux/manylinux_2_28_aarch64
  tags:
    - aarch64

# Build wheels for all supported platforms
wheel:cp39-cp39-manylinux_2_28_x86_64:
  extends:
    - .wheel:manylinux_2_28_x86_64
wheel:cp310-cp310-manylinux_2_28_x86_64:
  extends:
    - .wheel:manylinux_2_28_x86_64
wheel:cp311-cp311-manylinux_2_28_x86_64:
  extends:
    - .wheel:manylinux_2_28_x86_64
wheel:cp312-cp312-manylinux_2_28_x86_64:
  # allow to fail due to build error in ligo-segments:
  #   https://git.ligo.org/lscsoft/lalsuite/-/merge_requests/2418#note_1324099
  # revert once !2397 is merged
  allow_failure: true
  extends:
    - .wheel:manylinux_2_28_x86_64
  rules:  # reference build for this platform
    - !reference [.ci-wheels, rules]
    - !reference [.ci-merge-build, rules]
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-nightly-deploy, rules]
wheel:cp39-cp39-manylinux_2_28_aarch64:
  extends:
    - .wheel:manylinux_2_28_aarch64
wheel:cp310-cp310-manylinux_2_28_aarch64:
  extends:
    - .wheel:manylinux_2_28_aarch64
wheel:cp311-cp311-manylinux_2_28_aarch64:
  extends:
    - .wheel:manylinux_2_28_aarch64
wheel:cp312-cp312-manylinux_2_28_aarch64:
  extends:
    - .wheel:manylinux_2_28_aarch64
  rules:  # reference build for this platform
    - !reference [.ci-wheels, rules]
    # Disable building aarch64 for MRs due to low availability of aarch64 runners
    # - !reference [.ci-merge-build, rules]
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-nightly-deploy, rules]
wheel:cp39-cp39-macos-x86_64:
  extends:
    - .wheel:macos
    - .wheel:macos:x86_64
wheel:cp310-cp310-macos-x86_64:
  extends:
     - .wheel:macos
     - .wheel:macos:x86_64
wheel:cp311-cp311-macos-x86_64:
  extends:
     - .wheel:macos
     - .wheel:macos:x86_64
wheel:cp312-cp312-macos-x86_64:
  extends:
     - .wheel:macos
     - .wheel:macos:x86_64
  rules:  # reference build for this platform
    - !reference [.ci-wheels, rules]
    - !reference [.ci-merge-build, rules]
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-nightly-deploy, rules]
wheel:cp39-cp39-macos-arm64:
  extends:
    - .wheel:macos
    - .wheel:macos:arm64
wheel:cp310-cp310-macos-arm64:
  extends:
     - .wheel:macos
     - .wheel:macos:arm64
wheel:cp311-cp311-macos-arm64:
  extends:
     - .wheel:macos
     - .wheel:macos:arm64
wheel:cp312-cp312-macos-arm64:
  extends:
     - .wheel:macos
     - .wheel:macos:arm64
  rules:  # reference build for this platform
    - !reference [.ci-wheels, rules]
    - !reference [.ci-merge-build, rules]
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-nightly-deploy, rules]

# deploy wheels
wheel:pypi:
  extends:
    - .deploy
  image: quay.io/lib/python
  script:
    # TWINE_USERNAME and TWINE_PASSWORD are provided by CI secret variables
    - !reference [.python-venv]
    - pip install twine
    - |
      if [ "X${EXECUTE_DEPLOY_ACTIONS}" != "Xyes" ]; then
        echo "Skipping rest of job as EXECUTE_DEPLOY_ACTIONS!=yes"
        exit 100
      fi
    - twine upload wheelhouse/*
  needs:
    - wheel:cp39-cp39-manylinux_2_28_x86_64
    - wheel:cp310-cp310-manylinux_2_28_x86_64
    - wheel:cp311-cp311-manylinux_2_28_x86_64
    - wheel:cp312-cp312-manylinux_2_28_x86_64
    - wheel:cp39-cp39-manylinux_2_28_aarch64
    - wheel:cp310-cp310-manylinux_2_28_aarch64
    - wheel:cp311-cp311-manylinux_2_28_aarch64
    - wheel:cp312-cp312-manylinux_2_28_aarch64
    - wheel:cp39-cp39-macos-x86_64
    - wheel:cp310-cp310-macos-x86_64
    - wheel:cp311-cp311-macos-x86_64
    - wheel:cp312-cp312-macos-x86_64
    - wheel:cp39-cp39-macos-arm64
    - wheel:cp310-cp310-macos-arm64
    - wheel:cp311-cp311-macos-arm64
    - wheel:cp312-cp312-macos-arm64
  rules:
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-nightly-deploy, rules]
  allow_failure:
    exit_codes: 100   # EXECUTE_DEPLOY_ACTIONS!=yes
