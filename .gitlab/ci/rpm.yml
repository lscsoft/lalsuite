# ----------------------------------------------------------------------
# LALSuite: RPM package-level build
# ----------------------------------------------------------------------

# -- templates

.rpmbuild:
  extends:
    - .rhel:rpm
    - .build-from-tarball
  variables:
    # disable repos we don't use
    DISABLE_REPOS: "htcondor osg"
    # parallelise the build (rpmbuild uses this variable by default)
    RPM_BUILD_NCPUS: ${CPU_COUNT}
    # where to build things (not a standard variable name)
    RPM_BUILD_TOPDIR: "${CI_PROJECT_DIR}/rpmbuild"
  # before_script comes from .rhel:rpm
  script:
    - !reference [.build-init]
    # build a yum repo from the upstream packages
    - |
      if [ -d rpmbuild ]; then
          retry yum install -y -q createrepo
          LOCAL_REPO="${CI_PROJECT_DIR}/local-builds"
          cp -r rpmbuild/RPMS ${LOCAL_REPO}
          createrepo --quiet --workers "${CPU_COUNT}" "${LOCAL_REPO}"
          cat > /etc/yum.repos.d/local-builds.repo <<EOF
      [local-builds]
      name=Local builds
      baseurl=file://${LOCAL_REPO}
      enabled=1
      gpgcheck=0
      EOF
      fi
    # install srpm dependencies
    - retry yum install -y -q lscsoft-packaging-tools
    # build src.rpm
    - PACKAGE=${CI_JOB_NAME%%:*}
    - cd ${PACKAGE}/
    - TARBALL=$(ls -t1 ${PACKAGE}-*.tar.* | head -n1 | xargs readlink -f)
    - rpmbuild -ts --define "_topdir ${RPM_BUILD_TOPDIR}" ${TARBALL}
    - SRPM=${RPM_BUILD_TOPDIR}/SRPMS/${PACKAGE}-*.src.rpm
    # install build dependencies
    - retry yum-builddep -y ${SRPM}
    # print installed packages
    - yum list installed --quiet
    # build binary rpms and print details of what we got
    - rpmbuild --rebuild --noclean --define "_topdir ${RPM_BUILD_TOPDIR}" ${SRPM}
    # print package info
    - set +x
    - for rpmf in ${CI_PROJECT_DIR}/rpmbuild/RPMS/*/*${PACKAGE}-*.rpm; do
          echo "===== ${rpmf}" &&
          rpm -qlp "${rpmf}" &&
          echo "Files:" &&
          rpm -qip "${rpmf}" &&
          echo "Provides:" &&
          rpm -qp --provides "${rpmf}" &&
          echo "Requires:" &&
          rpm -qp --requires "${rpmf}";
      done
    # install the packages we built
    - retry yum -y -q install ${CI_PROJECT_DIR}/rpmbuild/RPMS/*/*${PACKAGE}-*.rpm
    # lint packages (both installed packages and RPM files)
    - |
      cat << EOF > rpmlintrc
      # don't validate Source0
      setOption("NetworkEnabled", False)
      # don't know how to fix this
      addFilter('binary-or-shlib-defines-rpath')
      # the regex rpmlint uses to identify 'lib' libraries is crap
      addFilter('explicit-lib-dependency (.*)?matplotlib')
      addFilter('explicit-lib-dependency (.*)?ciecplib')
      EOF
    - rpmlint
          -f rpmlintrc
          "*${PACKAGE}*"
          ${CI_PROJECT_DIR}/rpmbuild/RPMS/*/*${PACKAGE}-*.rpm
      # create a codeclimate report from the rpmlint report
    - unset PIP_NO_INDEX && rm -rf ~/.pydistutils.cfg
    - !reference [.python-venv]
    - pip install rpmlint-codeclimate
    - |
      rpmlint -f rpmlintrc --info "*${PACKAGE}*" ${CI_PROJECT_DIR}/rpmbuild/RPMS/*/*${PACKAGE}-*.rpm > rpmlint.out || true
      python3 -m rpmlint_codeclimate rpmlint.out -s ${PACKAGE}.spec -o ${CI_PROJECT_DIR}/rpmlint-gl-codeclimate-${PACKAGE}.json
      sed -i \
        -e "s|${PACKAGE}.spec|${PACKAGE}/${PACKAGE}.spec.in|g" \
        $CI_PROJECT_DIR/rpmlint-gl-codeclimate-$PACKAGE.json
      echo "rpmlint codeclimate report written to rpmlint-gl-codeclimate-${PACKAGE}.json"
  artifacts:
    expire_in: 18h
    paths:
      # build packages
      - "rpmbuild/RPMS/*/${CI_JOB_NAME%%:*}-*.rpm"
      - "rpmbuild/RPMS/*/lib${CI_JOB_NAME%%:*}-*.rpm"
      - "rpmbuild/RPMS/*/python*-${CI_JOB_NAME%%:*}-*.rpm"
      # log files
      - "rpmbuild/BUILD/**/config.log"
      - "rpmbuild/BUILD/**/test-suite.log"
      # generated sources
      - "rpmbuild/BUILD/**/swiglal_lal*_octave.cpp"
      - "rpmbuild/BUILD/**/swiglal_lal*_python.c"
    reports:
      codequality: "rpmlint-gl-codeclimate-*.json"
      junit: "rpmbuild/BUILD/**/*junit*.xml"
    when: always
  rules:
    - !reference [.ci-rhel, rules]
    - !reference [.ci-merge-build, rules]
    - !reference [.ci-nightly-deploy, rules]
    - !reference [.ci-lalsuite-tag-build, rules]
    - !reference [.ci-docker, rules]

.rpmbuild:el8:
  extends:
    - .rpmbuild
  image: quay.io/igwn/base:el8-testing

# -- builds

lal:rpm-el8:
  extends:
     - .rpmbuild:el8
     - .lal
  needs:
    - !reference [.lal, needs]

lalframe:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalframe
  needs:
    - !reference [.lalframe, needs]
    - lal:rpm-el8

lalmetaio:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalmetaio
  needs:
    - !reference [.lalmetaio, needs]
    - lal:rpm-el8

lalsimulation:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalsimulation
  needs:
    - !reference [.lalsimulation, needs]
    - lal:rpm-el8

lalburst:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalburst
  needs:
    - !reference [.lalburst, needs]
    - lal:rpm-el8
    - lalmetaio:rpm-el8
    - lalsimulation:rpm-el8

lalinspiral:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalinspiral
  needs:
    - !reference [.lalinspiral, needs]
    - lal:rpm-el8
    - lalframe:rpm-el8
    - lalmetaio:rpm-el8
    - lalsimulation:rpm-el8
    - lalburst:rpm-el8

lalinference:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalinference
  needs:
    - !reference [.lalinference, needs]
    - lal:rpm-el8
    - lalframe:rpm-el8
    - lalmetaio:rpm-el8
    - lalsimulation:rpm-el8
    - lalburst:rpm-el8
    - lalinspiral:rpm-el8

lalpulsar:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalpulsar
  needs:
    - !reference [.lalpulsar, needs]
    - lal:rpm-el8
    - lalframe:rpm-el8
    - lalmetaio:rpm-el8
    - lalsimulation:rpm-el8
    - lalburst:rpm-el8
    - lalinspiral:rpm-el8
    - lalinference:rpm-el8

lalapps:rpm-el8:
  extends:
    - .rpmbuild:el8
    - .lalapps
  needs:
    - !reference [.lalapps, needs]
    - lal:rpm-el8
    - lalframe:rpm-el8
    - lalmetaio:rpm-el8
    - lalsimulation:rpm-el8
    - lalburst:rpm-el8
    - lalinspiral:rpm-el8
    - lalinference:rpm-el8
    - lalpulsar:rpm-el8
