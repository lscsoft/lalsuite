# ----------------------------------------------------------------------
# LALSuite: basic package-level build
#
# Test building LALSuite package by package, without the additional
# overhead of a package management system (Debian/RPM/Conda/etc.).
# Intended to be run on normal pushes to minimise run time and resource
# usage, reserving the Debian/RPM/Conda/etc. builds for merge requests.
# ----------------------------------------------------------------------

# -- templates

.pkgbuild:
  extends:
    - .build-job
    - .build-from-tarball
  image: quay.io/igwn/lalsuite-dev:el8-testing
  variables:
    # default configure flags (can be overridden from dependents)
    CONFIGURE_FLAGS: "--enable-python --enable-swig-python"
  script:
    # set up environment
    - |
      for userenv in lal*/_inst/etc/lal*-user-env.sh; do
        if test -f "${userenv}"; then
          echo "source ${userenv}"
          source ${userenv}
        fi
      done
    # unpack tarball
    - PACKAGE=${CI_JOB_NAME%%:*}
    - cd ${PACKAGE}/
    - TARBALL=$(ls -t1 ${PACKAGE}-*.tar.* | head -n1 | xargs readlink -f)
    - tar -xf ${TARBALL}
    - cd ${PACKAGE}-*/
    # install build dependencies
    - |
      sed -i -e '/BuildRequires: *\(lal\|liblal\|python.*-lal\)/d' ${PACKAGE}.spec
    - retry yum-builddep -y -q ${PACKAGE}.spec
    # we use xargs here in case CONFIGURE_FLAGS contains
    # variables with spaces, etc etc
    - DEFAULT_CONFIGURE_FLAGS="--prefix=${PWD}/../_inst --enable-strict-defs"
    - xargs ./configure ${DEFAULT_CONFIGURE_FLAGS} <<< ${CONFIGURE_FLAGS}
    # build, test, and install package
    - make -j${CPU_COUNT} VERBOSE=1 all
    - make -j${CPU_COUNT} VERBOSE=1 check
    - make -j${CPU_COUNT} VERBOSE=1 install
    - make -j${CPU_COUNT} VERBOSE=1 installcheck
  artifacts:
    expire_in: 18h
    paths:
      # install directory
      - "lal*/_inst/"
      # log files
      - "lal*/**/config.log"
      - "lal*/**/test-suite.log"
      # generated sources
      - "lal*/**/swiglal_lal*_octave.cpp"
      - "lal*/**/swiglal_lal*_python.c"
    when: always
  rules:
    - !reference [.ci-pkg, rules]
    - !reference [.ci-push-build, rules]
    - when: never

# -- builds

lal:pkg:
  extends:
    - .pkgbuild
    - .lal
  needs:
    - !reference [.lal, needs]

lalframe:pkg:
  extends:
    - .pkgbuild
    - .lalframe
  needs:
    - !reference [.lalframe, needs]
    - lal:pkg

lalmetaio:pkg:
  extends:
    - .pkgbuild
    - .lalmetaio
  needs:
    - !reference [.lalmetaio, needs]
    - lal:pkg

lalsimulation:pkg:
  extends:
    - .pkgbuild
    - .lalsimulation
  needs:
    - !reference [.lalsimulation, needs]
    - lal:pkg

lalburst:pkg:
  extends:
    - .pkgbuild
    - .lalburst
  needs:
    - !reference [.lalburst, needs]
    - lal:pkg
    - lalmetaio:pkg
    - lalsimulation:pkg

lalinspiral:pkg:
  extends:
    - .pkgbuild
    - .lalinspiral
  needs:
    - !reference [.lalinspiral, needs]
    - lal:pkg
    - lalframe:pkg
    - lalmetaio:pkg
    - lalsimulation:pkg
    - lalburst:pkg

lalinference:pkg:
  extends:
    - .pkgbuild
    - .lalinference
  needs:
    - !reference [.lalinference, needs]
    - lal:pkg
    - lalframe:pkg
    - lalmetaio:pkg
    - lalsimulation:pkg
    - lalburst:pkg
    - lalinspiral:pkg

lalpulsar:pkg:
  extends:
    - .pkgbuild
    - .lalpulsar
  needs:
    - !reference [.lalpulsar, needs]
    - lal:pkg
    - lalframe:pkg
    - lalmetaio:pkg
    - lalsimulation:pkg
    - lalburst:pkg
    - lalinspiral:pkg
    - lalinference:pkg

lalapps:pkg:
  extends:
    - .pkgbuild
    - .lalapps
  needs:
    - !reference [.lalapps, needs]
    - lal:pkg
    - lalframe:pkg
    - lalmetaio:pkg
    - lalsimulation:pkg
    - lalburst:pkg
    - lalpulsar:pkg
    - lalinspiral:pkg
    - lalinference:pkg
